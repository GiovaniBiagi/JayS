name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # Try different WebKit package names for different Ubuntu versions
          sudo apt-get install -y libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev libssl-dev libasound2-dev || true
          sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev || sudo apt-get install -y libwebkit2gtk-4.2-dev || true

      - name: Install dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install create-dmg

      - name: Install dependencies
        run: |
          # Clear any existing npm configuration and use public registry
          rm -f ~/.npmrc || true
          npm config delete registry || true
          npm config delete //registry.npmjs.org/:_authToken || true
          npm config set registry https://registry.npmjs.org/
          npm config set @types:registry https://registry.npmjs.org/
          npm install --no-audit --no-fund --no-optional
        env:
          NODE_AUTH_TOKEN: ""
          NPM_CONFIG_USERCONFIG: ""

      - name: Build Tauri app
        run: npm run tauri build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jays-${{ matrix.platform }}
          path: src-tauri/target/release/bundle/

      - name: Create Release
        if: matrix.platform == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/msi/*.msi
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
